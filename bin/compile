#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
# $HOME: /app

# fail fast
set -eu -o pipefail

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
LP_DIR=$(
  cd "$(dirname "$0")"
  cd ..
  pwd
)

# Install bun
export BUN_INSTALL=$CACHE_DIR/bun
export PATH="$BUN_INSTALL/bin:$PATH"

# Check if BUN_VERSION is already set, otherwise use default value
if [ -f "$BUILD_DIR"/.bun-version ]; then
  echo "Trying to get BUN_VERSION from $BUILD_DIR/.bun-version file"
  BUN_VERSION=$(cat "$BUILD_DIR"/.bun-version)
else
  BUN_VERSION="--stable"
fi
echo "------> BUN_VERSION = $BUN_VERSION"

# Check if bun is already installed
if [ -f "$BUN_INSTALL"/bin/bun ]; then
  INSTALLED_VERSION=$(bun --version | awk '{print $2}')
  echo "------> Bun $INSTALLED_VERSION is already installed"

  # Compare installed version with desired version
  if [ "$INSTALLED_VERSION" != "$BUN_VERSION" ]; then
    echo "Will upgrade bun to $BUN_VERSION"
    bun upgrade "$BUN_VERSION"
  else
    echo "Bun is already at the desired version $BUN_VERSION"
  fi
else
  echo "Bun is not installed. Installing version $BUN_VERSION"
  curl -fsSL https://bun.sh/install | bash -s "bun-v$BUN_VERSION"
fi


cat <<EOT >"$BUILD_DIR"/.bunfig.toml
[install.cache]
# the directory to use for the cache
dir = "$CACHE_DIR/bun/install/cache"
EOT

# download dependencies
cd "$BUILD_DIR"
bun install

# give environment to later buildpacks
export | grep -E -e ' (PATH)=' >"$LP_DIR/export"
